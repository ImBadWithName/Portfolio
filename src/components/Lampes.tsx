/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_1: THREE.Mesh;
    Cylinder_2: THREE.Mesh;
    Cylinder_3: THREE.Mesh;
    BezierCurve: THREE.Mesh;
    Cube: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube002_2: THREE.Mesh;
    Cube003_1: THREE.Mesh;
    Cube003_2: THREE.Mesh;
    Cube005: THREE.Mesh;
    Cube005_1: THREE.Mesh;
    Cube008: THREE.Mesh;
    Cube009: THREE.Mesh;
    Cube010: THREE.Mesh;
    Cylinder001_1: THREE.Mesh;
    Cylinder001_2: THREE.Mesh;
    Cylinder001_3: THREE.Mesh;
    Cylinder004: THREE.Mesh;
    Sphere: THREE.Mesh;
  };
  materials: {
    ["Black metal"]: THREE.MeshStandardMaterial;
    ["Red Paint"]: THREE.MeshStandardMaterial;
    Screw: THREE.MeshStandardMaterial;
    ["Black metal"]: THREE.MeshStandardMaterial;
    Screw: THREE.MeshStandardMaterial;
    ["White paint"]: THREE.MeshStandardMaterial;
    Bulb: THREE.MeshStandardMaterial;
  };
};

export function Lampes(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3dModels/Lamp.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Cylinder" position={[0, -0.161, 0]}>
        <mesh
          name="Cylinder_1"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_1.geometry}
          material={materials["Black metal"]}
        />
        <mesh
          name="Cylinder_2"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_2.geometry}
          material={materials["Red Paint"]}
        />
        <mesh
          name="Cylinder_3"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_3.geometry}
          material={materials.Screw}
        />
        <mesh
          name="BezierCurve"
          castShadow
          receiveShadow
          geometry={nodes.BezierCurve.geometry}
          material={materials["Black metal"]}
          position={[0.003, 2.662, 0.192]}
        />
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials["Red Paint"]}
          position={[0, 0.432, 0]}
          scale={0.097}
        />
        <group
          name="Cube001"
          position={[0.159, 3.302, -0.367]}
          rotation={[-1.433, 0, 0]}
          scale={0.097}
        >
          <mesh
            name="Cube002_1"
            castShadow
            receiveShadow
            geometry={nodes.Cube002_1.geometry}
            material={materials["Black metal"]}
          />
          <mesh
            name="Cube002_2"
            castShadow
            receiveShadow
            geometry={nodes.Cube002_2.geometry}
            material={materials.Screw}
          />
        </group>
        <group
          name="Cube002"
          position={[0.063, 2.351, 1.137]}
          rotation={[-0.228, 0, 0]}
          scale={[0.061, 0.311, 0.311]}
        >
          <mesh
            name="Cube003_1"
            castShadow
            receiveShadow
            geometry={nodes.Cube003_1.geometry}
            material={materials["Black metal"]}
          />
          <mesh
            name="Cube003_2"
            castShadow
            receiveShadow
            geometry={nodes.Cube003_2.geometry}
            material={materials.Screw}
          />
        </group>
        <group name="Cube003" position={[0, 0.66, 0.723]} scale={0.24}>
          <mesh
            name="Cube005"
            castShadow
            receiveShadow
            geometry={nodes.Cube005.geometry}
            material={materials["Black metal"]}
          />
          <mesh
            name="Cube005_1"
            castShadow
            receiveShadow
            geometry={nodes.Cube005_1.geometry}
            material={materials.Screw}
          />
        </group>
        <mesh
          name="Cube008"
          castShadow
          receiveShadow
          geometry={nodes.Cube008.geometry}
          material={materials["Red Paint"]}
          position={[0, 0.432, 0]}
          scale={0.097}
        />
        <mesh
          name="Cube009"
          castShadow
          receiveShadow
          geometry={nodes.Cube009.geometry}
          material={materials["Red Paint"]}
          position={[0, 2.974, 0.605]}
          rotation={[-1.409, 0, 0]}
          scale={0.097}
        />
        <mesh
          name="Cube010"
          castShadow
          receiveShadow
          geometry={nodes.Cube010.geometry}
          material={materials["Red Paint"]}
          position={[0, 2.856, 0.113]}
          rotation={[-1.409, 0, 0]}
          scale={0.097}
        />
        <group
          name="Cylinder001"
          position={[0, 3.495, -1.547]}
          rotation={[0.863, 0, 0]}
          scale={0.748}
        >
          <mesh
            name="Cylinder001_1"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001_1.geometry}
            material={materials["Red Paint"]}
          />
          <mesh
            name="Cylinder001_2"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001_2.geometry}
            material={materials["Black metal"]}
          />
          <mesh
            name="Cylinder001_3"
            castShadow
            receiveShadow
            geometry={nodes.Cylinder001_3.geometry}
            material={materials["White paint"]}
          />
        </group>
        <mesh
          name="Cylinder004"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder004.geometry}
          material={materials["Black metal"]}
          position={[0, 0.429, -0.61]}
        />
        <mesh
          name="Sphere"
          castShadow
          receiveShadow
          geometry={nodes.Sphere.geometry}
          material={materials.Bulb}
          position={[0, 3.367, -1.671]}
          rotation={[0.871, 0, 0]}
          scale={0.311}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/3dModels/Lamp.glb");
