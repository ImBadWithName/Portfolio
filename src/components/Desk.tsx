/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube_1: THREE.Mesh
    Cube_2: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
  }
  materials: {
    ['White metal paint']: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
  }
}

export function Desk(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/3dModels/Desk.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation-y={Math.PI/2} scale={5}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube_1.geometry}
          material={materials['White metal paint']}
        />
        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials.Wood} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials['White metal paint']}
          position={[-0.533, -0.18, 0.614]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials['White metal paint']}
          position={[-0.533, -0.542, 0.614]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/3dModels/Desk.glb')
