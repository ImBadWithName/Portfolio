/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { MouseEventHandler, forwardRef, useEffect, useRef, useState } from "react";
import { Bvh, Html, useBVH, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import WebSection from "./WebSection/WebSection";

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube001: THREE.Mesh;
    Ecran: THREE.Mesh;
  };
  materials: {
    ["computer material"]: THREE.MeshStandardMaterial;
    ["Computer material 2"]: THREE.MeshStandardMaterial;
  };
};
type Props = JSX.IntrinsicElements["group"]&{
  children?:any
}
export const Computer=forwardRef<THREE.Group, Props>((props, ref) =>{
  const { nodes, materials } = useGLTF("3dModels/computer.glb") as GLTFResult;
  const audio = new Audio("/Sounds/computer.mp3")
  audio.volume = 0.3
  audio.play();
  const clickAudio = new Audio("/Sounds/click.mp3");
  clickAudio.loop = false
  clickAudio.preservesPitch = false;
  const handleClick =()=>{
    clickAudio.playbackRate=0.8+Math.random()*0.4
    clickAudio.play();
  }
  useEffect(()=>{
    window.addEventListener('click',handleClick)

    
    return ()=>{
        window.removeEventListener('click',handleClick)

    }
})
  return (
    <group ref={ref} {...props} dispose={null}>
      <group>
      <Bvh firstHitOnly>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials["computer material"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials["Computer material 2"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={nodes.Cube001.material}
          position={[1.19, 1.02, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Ecran.geometry}
          material={nodes.Ecran.material}
          position={[0.02, 2.44, -0.05]}
          rotation={[0, -0.13, 0]}
        >
           <Html  transform scale={0.8}
          center
        position={[0.9, 0, 0]}
        distanceFactor={1}
        zIndexRange={[1000,1500]}
        rotation={[0,Math.PI/2,0]}
        >
          {props.children}
        </Html> 
        </mesh>
        </Bvh>
      </group>
    </group>
  );
})

useGLTF.preload("3dModels/computer.glb");
