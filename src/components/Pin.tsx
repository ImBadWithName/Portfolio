/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_1: THREE.Mesh;
    Cylinder_2: THREE.Mesh;
  };
  materials: {
    Plastic: THREE.MeshStandardMaterial;
    Pointe: THREE.MeshStandardMaterial;
  };
};

export function Pin(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/3dModels/Pin.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        name="Cylinder_1"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder_1.geometry}
        material={materials.Plastic}
      />
      <mesh
        name="Cylinder_2"
        castShadow
        receiveShadow
        geometry={nodes.Cylinder_2.geometry}
        material={materials.Pointe}
      />
    </group>
  );
}

useGLTF.preload("/3dModels/Pin.glb");
